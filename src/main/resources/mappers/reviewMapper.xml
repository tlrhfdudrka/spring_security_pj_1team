<?xml version="1.0" encoding="UTF-8"?>

 <!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="spring.mvc.basic_1team.dao.ReviewDAO">

   <!-- CDATA : Character Data의 의미 : 면접
      CDATA 영역에 작성된 특수문자데이터는 단순한 문자데이터(Character Data)로 인식하므로
      XML 파서기가 처리하지 않고, 데이터베이스에 그대로 전달함으로써 에러가 발생하지 않도록 한다.
      즉 <>와 같은 부등호를 xml 태그로 인식하지 않고, 단순 문자로 인식(부등호로 인식)하도록 한다.
    -->
   <!-- 게시글 목록 -->
   <select id="reviewList" parameterType="java.util.Map" resultType="spring.mvc.basic_1team.dto.ReviewDTO">
      <![CDATA[ 
		         
          SELECT * 
    		  FROM ( 
    		      SELECT A.*, 
    		           rownum AS rn 
    		      FROM 
    		        ( 
    		        SELECT * FROM pj_review_tbl 
    		                WHERE show = 'y' 
    		            ORDER BY review_num DESC 
    		        ) A 
    		  ) 
		      WHERE rn >= #{start} 
		        AND rn <= #{end} 
      ]]>  
   </select>
   
   <!-- 개시글 갯수 구하기 -->
   <select id="boardCnt" resultType="int">
      SELECT COUNT(*) as cnt FROM pj_review_tbl
   </select>
   
   <!-- 조회수 증가 -->
 <!--   <update id="plusReadCnt" parameterType="int">
   		UPDATE mvc_board_tbl
		SET readCnt = readCnt+1
		WHERE num = #{num}
   </update> -->
	
  <!--  게시글 상세페이지 -->
   <select id="getBoardDetail" parameterType="int" resultType="spring.mvc.basic_1team.dto.ReviewDTO">
   		SELECT * FROM pj_review_tbl
	    WHERE review_num = #{review_num}
   </select>
	
	
	
 	<!-- 게시글 수정 삭제시 비밀번호 인증 -->
<!--	<select id="password_chk" parameterType="java.util.Map" resultType="int">
	SELECT COUNT(*) AS cnt FROM mvc_board_tbl
	WHERE num  = #{num}
	AND password = #{password}
	</select> -->
	
	
	<!-- 게시글 수정처리 -->
 	<update id="updateReview" parameterType="spring.mvc.basic_1team.dto.ReviewDTO">
			 UPDATE pj_review_tbl 
			 SET review_title = #{review_title}, review_content= #{review_content}, review_img = #{review_img}
			 WHERE review_num = #{review_num}
			
	</update> 
	
	<!-- 게시글 삭제 처리 -->
	<update id="deletReview" parameterType="int">
	UPDATE pj_review_tbl 
	SET show = 'n' 
	WHERE review_num = #{review_num}
	</update>
	
	<!-- 게시글 작성 처리 -->
	<insert id="writeReview" parameterType="spring.mvc.basic_1team.dto.ReviewDTO">
	INSERT INTO pj_review_tbl(review_num, review_title, review_content, review_img, review_date) 
	VALUES((SELECT NVL(MAX(review_num)+1, 1) FROM pj_review_tbl), #{review_title}, #{review_content}, #{review_img}, sysdate) 
	</insert>
	
	
</mapper>